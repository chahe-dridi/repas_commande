<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
                    xmlns:converters="clr-namespace:FoodRecipes.Converter"
                    xmlns:custom="clr-namespace:FoodRecipes.CustomView"
                    xmlns:local="clr-namespace:FoodRecipes">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ValidationErrorTemplate.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Menu.xaml" />

        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:BrushOpacityConverter x:Key="BrushOpacityConverter"/>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <!-- Redefined color -->
    <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="#172975"/>
    <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="#172975"/>
    <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="#172975"/>
    <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="#8fa2e2"/>
    <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="#172975"/>
    <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="#8fa2e2"/>
    <SolidColorBrush x:Key="MaterialDesignTextFieldBoxHoverBackground" Color="#8fa2e2"/>

    <!-- MaterialDesignFlatButton -->
    <Style x:Key="WindowOptionsButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource MaterialDesignFlatButton}">
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource RippleBlue}"/>
        <Setter Property="materialDesign:RippleAssist.Feedback" Value="{DynamicResource RippleBlue}" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                x:Name="border" 
                                CornerRadius="{Binding Path=(materialDesign:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <materialDesign:Ripple Content="{TemplateBinding Content}" 
                                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                                        Focusable="False"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Padding="{TemplateBinding Padding}" 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <materialDesign:Ripple.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="border" Path="ActualWidth" />
                                        <Binding ElementName="border" Path="ActualHeight" />
                                        <Binding ElementName="border" Path="CornerRadius" />
                                        <Binding ElementName="border" Path="BorderThickness" />
                                    </MultiBinding>
                                </materialDesign:Ripple.Clip>
                            </materialDesign:Ripple>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding Foreground,
                                                                                        RelativeSource={RelativeSource Mode=TemplatedParent},
                                                                                        Converter={StaticResource BrushOpacityConverter},
                                                                                        ConverterParameter=0.25}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DrawerButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource WindowOptionsButton}">
        <Setter Property="Width" Value="165"/>
        <Setter Property="Height" Value="38"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MyBlue}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="materialDesign:RippleAssist.Feedback" Value="White" />
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="19" />

    </Style>

    <Style x:Key="CardScaleHover" TargetType="{x:Type materialDesign:Card}" >
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Grid.ZIndex" Value="1"/>
                <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.008" ScaleY="1.008"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SearchTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
        <Setter Property="Foreground" Value="{DynamicResource MyBlack}"/>
        <Setter Property="FontFamily" Value="{StaticResource GilroyRegular}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="materialDesign:TextFieldAssist.DecorationVisibility" Value="Hidden"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="materialDesign:TextFieldAssist.HasClearButton" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
    </Style>


    <Style x:Key="SearchBoxComboBoxItem" TargetType="ComboBoxItem" BasedOn="{StaticResource MaterialDesignComboBoxItemSelectedCollapsedStyle}">
        <Setter Property="BorderBrush" Value="{DynamicResource RippleBlue}"/>
        <Setter Property="materialDesign:RippleAssist.Feedback" Value="{DynamicResource RippleBlue}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                x:Name="border" 
                                CornerRadius="{Binding Path=(materialDesign:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <materialDesign:Ripple Content="{TemplateBinding Content}" 
                                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                                        Focusable="False"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Padding="{TemplateBinding Padding}" 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <materialDesign:Ripple.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="border" Path="ActualWidth" />
                                        <Binding ElementName="border" Path="ActualHeight" />
                                        <Binding ElementName="border" Path="CornerRadius" />
                                        <Binding ElementName="border" Path="BorderThickness" />
                                    </MultiBinding>
                                </materialDesign:Ripple.Clip>
                            </materialDesign:Ripple>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding BorderBrush,
                                                                                        RelativeSource={RelativeSource Mode=TemplatedParent},
                                                                                        Converter={StaticResource BrushOpacityConverter},
                                                                                        ConverterParameter=0.25}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.23"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchBoxComboBox" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignComboBox}">
        <Setter Property="FontSize" Value="13.5"/>
        <Setter Property="FontFamily" Value="{DynamicResource GilroySemiBold}"/>
        <Setter Property="Foreground" Value="{DynamicResource MyBlack}"/>
        <Setter Property="materialDesign:ComboBoxAssist.ClassicMode" Value="True"/>
        <Setter Property="materialDesign:RippleAssist.Feedback" Value="{DynamicResource RippleBlue}" />
    </Style>

    <Style x:Key="AddRecipeComboBox" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource SearchBoxComboBox}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="{DynamicResource GilroyRegular}"/>
    </Style>

    <Style x:Key="NonHoverListBoxItem" TargetType="ListBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border" 
                            Padding="8" 
                            SnapsToDevicePixels="true"
                            Background="Transparent">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                            <Setter Property="Grid.ZIndex" Value="1"/>
                            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.05" ScaleY="1.05"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LinearColorHoverListBox" TargetType="ListBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Foreground" Value="{DynamicResource RippleBlue}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border" 
                            Padding="0, 0, 0, 2" 
                            SnapsToDevicePixels="true"
                            Background="Transparent">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{Binding Foreground,
                                                                                        RelativeSource={RelativeSource Mode=TemplatedParent},
                                                                                        Converter={StaticResource BrushOpacityConverter},
                                                                                        ConverterParameter=0.25}" />
                            <Setter Property="Grid.ZIndex" Value="1"/>
                            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.01" ScaleY="1.01"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ShoppingListViewItem" TargetType="ListBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MyOrange}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border" 
                            Padding="8, 4, 16, 16" 
                            SnapsToDevicePixels="true"
                            Background="Transparent">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource MyRed}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource MyOrange}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                            <Setter Property="Grid.ZIndex" Value="1"/>
                            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.05" ScaleY="1.05"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ShoppingIgredientListViewItem" TargetType="ListBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Foreground" Value="{DynamicResource RippleBlue}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border" 
                            Padding="0, 4, 0, 4" 
                            SnapsToDevicePixels="true"
                            Background="Transparent">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource LightYellow}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Transparent"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="Border" Property="Background" Value="{Binding Foreground,
                                                                                        RelativeSource={RelativeSource Mode=TemplatedParent},
                                                                                        Converter={StaticResource BrushOpacityConverter},
                                                                                        ConverterParameter=0.25}" />
                            <Setter Property="Grid.ZIndex" Value="1"/>
                            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.01" ScaleY="1.01"/>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageRecipeListViewItem" TargetType="ListBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border" 
                            Padding="0, 0, 16, 0" 
                            SnapsToDevicePixels="true"
                            Background="Transparent">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                            <Setter Property="Grid.ZIndex" Value="1"/>
                            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.05" ScaleY="1.05"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StepListBoxItem" TargetType="ListBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border" 
                            Padding="0" 
                            SnapsToDevicePixels="true"
                            Background="Transparent">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                            <Setter Property="Grid.ZIndex" Value="1"/>
                            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.01" ScaleY="1.01"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageStepListViewItem" TargetType="ListBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Name="Border" 
                            Padding="4, 8, 8, 8" 
                            SnapsToDevicePixels="true"
                            Background="Transparent">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                            <Setter Property="Grid.ZIndex" Value="1"/>
                            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.05" ScaleY="1.05"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupButton" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowOptionsButton}">
        <Setter Property="Height" Value="42"/>
        <Setter Property="Width" Value="{Binding Content}"/>
        <Setter Property="Background" Value="{DynamicResource MyLightGray}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="21"/>
        <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0"/>
        <Setter Property="materialDesign:RippleAssist.Feedback" Value="Yellow" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                x:Name="border" 
                                CornerRadius="{Binding Path=(materialDesign:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <materialDesign:Ripple Content="{TemplateBinding Content}" 
                                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                                        Focusable="False"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Padding="{TemplateBinding Padding}" 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <materialDesign:Ripple.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="border" Path="ActualWidth" />
                                        <Binding ElementName="border" Path="ActualHeight" />
                                        <Binding ElementName="border" Path="CornerRadius" />
                                        <Binding ElementName="border" Path="BorderThickness" />
                                    </MultiBinding>
                                </materialDesign:Ripple.Clip>
                            </materialDesign:Ripple>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ShoppingButton" TargetType="{x:Type Button}" BasedOn="{StaticResource GroupButton}">
        <Setter Property="Height" Value="80"/>
        <Setter Property="Width" Value="340"/>
        <Setter Property="Background" Value="{DynamicResource MyOrange}"/>
        <Setter Property="Foreground" Value="{DynamicResource OrangeHover}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="11"/>
        <Setter Property="materialDesign:RippleAssist.Feedback" Value="{DynamicResource LightRedHover}"/>
    </Style>

    <Style x:Key="RecipeButton" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowOptionsButton}">
        <Setter Property="Height" Value="126"/>
        <Setter Property="Width" Value="208"/>
        <Setter Property="Background" Value="{DynamicResource MyOrange}"/>
        <Setter Property="Foreground" Value="{DynamicResource OrangeHover}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="12"/>
        <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0"/>
        <Setter Property="materialDesign:RippleAssist.Feedback" Value="{DynamicResource MyYellow}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                x:Name="border" 
                                CornerRadius="{Binding Path=(materialDesign:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <materialDesign:Ripple Content="{TemplateBinding Content}" 
                                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                                        Focusable="False"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Padding="{TemplateBinding Padding}" 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <materialDesign:Ripple.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="border" Path="ActualWidth" />
                                        <Binding ElementName="border" Path="ActualHeight" />
                                        <Binding ElementName="border" Path="CornerRadius" />
                                        <Binding ElementName="border" Path="BorderThickness" />
                                    </MultiBinding>
                                </materialDesign:Ripple.Clip>
                            </materialDesign:Ripple>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding Foreground,
                                                                                        RelativeSource={RelativeSource Mode=TemplatedParent},
                                                                                        Converter={StaticResource BrushOpacityConverter},
                                                                                        ConverterParameter=1}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StepButton" TargetType="{x:Type Button}" BasedOn="{StaticResource RecipeButton}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="85"/>
        <Setter Property="Background" Value="{DynamicResource MyRed}"/>
        <Setter Property="Foreground" Value="{DynamicResource RedHover}"/>
        <Setter Property="materialDesign:RippleAssist.Feedback" Value="{DynamicResource LightRedHover}"/>
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="5"/>
        <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0"/>
    </Style>

    <Style x:Key="ImagePickerFrameButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource MaterialDesignFlatButton}">
        <Setter Property="Width" Value="120"/>
        <Setter Property="Height" Value="120"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MyLightGray3}"/>
        <Setter Property="Foreground" Value="{DynamicResource RigppleBlue}"/>
        <Setter Property="materialDesign:RippleAssist.Feedback" Value="{DynamicResource RippleBlue}" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                x:Name="border" 
                                CornerRadius="{Binding Path=(materialDesign:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <materialDesign:Ripple Content="{TemplateBinding Content}" 
                                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                                        Focusable="False"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Padding="{TemplateBinding Padding}" 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <materialDesign:Ripple.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="border" Path="ActualWidth" />
                                        <Binding ElementName="border" Path="ActualHeight" />
                                        <Binding ElementName="border" Path="CornerRadius" />
                                        <Binding ElementName="border" Path="BorderThickness" />
                                    </MultiBinding>
                                </materialDesign:Ripple.Clip>
                            </materialDesign:Ripple>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding BorderBrush,
                                                                                        RelativeSource={RelativeSource Mode=TemplatedParent},
                                                                                        Converter={StaticResource BrushOpacityConverter},
                                                                                        ConverterParameter=0.5}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <EventTrigger RoutedEvent="Control.MouseEnter">
                <BeginStoryboard>
                    <Storyboard >
                        <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="Control.MouseLeave">
                <BeginStoryboard>
                    <Storyboard >
                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ImagePickerButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource MaterialDesignFlatButton}">
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="LightGray"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource RippleBlue}"/>
        <Setter Property="materialDesign:RippleAssist.Feedback" Value="{DynamicResource RippleBlue}" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                x:Name="border" 
                                CornerRadius="{Binding Path=(materialDesign:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <materialDesign:Ripple Content="{TemplateBinding Content}" 
                                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                                        Focusable="False"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Padding="{TemplateBinding Padding}" 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <materialDesign:Ripple.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="border" Path="ActualWidth" />
                                        <Binding ElementName="border" Path="ActualHeight" />
                                        <Binding ElementName="border" Path="CornerRadius" />
                                        <Binding ElementName="border" Path="BorderThickness" />
                                    </MultiBinding>
                                </materialDesign:Ripple.Clip>
                            </materialDesign:Ripple>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="LightGray" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="PlayVideoButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource WindowOptionsButton}">
        <Setter Property="Width" Value="80"/>
        <Setter Property="Height" Value="80"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource MyRed}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource RippleBlue}"/>
        <Setter Property="materialDesign:RippleAssist.Feedback" Value="{DynamicResource RippleBlue}" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                x:Name="border" 
                                CornerRadius="{Binding Path=(materialDesign:ButtonAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <materialDesign:Ripple Content="{TemplateBinding Content}" 
                                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                                        Focusable="False"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Padding="{TemplateBinding Padding}" 
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <materialDesign:Ripple.Clip>
                                    <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                        <Binding ElementName="border" Path="ActualWidth" />
                                        <Binding ElementName="border" Path="ActualHeight" />
                                        <Binding ElementName="border" Path="CornerRadius" />
                                        <Binding ElementName="border" Path="BorderThickness" />
                                    </MultiBinding>
                                </materialDesign:Ripple.Clip>
                            </materialDesign:Ripple>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{Binding Foreground,
                                                                                        RelativeSource={RelativeSource Mode=TemplatedParent},
                                                                                        Converter={StaticResource BrushOpacityConverter},
                                                                                        ConverterParameter=0.7}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageRecipeCard" TargetType="{x:Type materialDesign:Card}">
        <Setter Property="Width" Value="95"/>
        <Setter Property="Height" Value="95"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="UniformCornerRadius" Value="48"/>
        <Setter Property="materialDesign:ShadowAssist.ShadowDepth" Value="Depth0"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <Style x:Key="AddRecipePageTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignOutlinedTextFieldTextBox}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="{DynamicResource MyBlack}"/>
        <Setter Property="materialDesign:HintAssist.IsFloating" Value="False"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="FontFamily" Value="{StaticResource GilroyRegular}"/>
        <Setter Property="Padding" Value="-5"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="MemberAvatarButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFloatingActionButton}">
        <Setter Property="Height" Value="84"/>
        <Setter Property="Width" Value="84"/>
        <Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="42"/>
    </Style>

    <!-- Custom Scroll bar -->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="6" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"  Width="Auto" Margin="0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="0"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="0"/>
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" CornerRadius="4" Background="Transparent" />
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0" Background="{DynamicResource MyLightGray3}" BorderBrush="Transparent"/>
                </Track.Thumb>
            </Track>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="0"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="0"/>
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3" CornerRadius="4" Background="Transparent"/>
            <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0" Background="{DynamicResource MyLightGray3}" BorderBrush="Transparent" />
                </Track.Thumb>
            </Track>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="8" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="8"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>